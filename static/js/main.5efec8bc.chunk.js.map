{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Default","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","goodA","goodB","Alphabet","localeCompare","Length","length","reverse","getPreparedGood","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0EAfQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAKGD,K,kBAAAA,E,gBAAAA,E,YAAAA,M,KAyCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,SAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAjCR,SACEC,EADF,GAMG,IAHCL,EAGF,EAHEA,OACAE,EAEF,EAFEA,WAGII,EAAa,YAAOD,GAoB1B,OAlBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAIT,IAAWL,EAASe,SACfF,EAAMG,cAAcF,GAGzBT,IAAWL,EAASiB,OACfJ,EAAMK,OAASJ,EAAMI,OAGvB,KAIPX,GACFI,EAAcQ,UAGTR,EAMcS,CACnBnB,EACA,CACEI,SACAE,eASJ,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMjB,EAAUN,EAASe,WAClCM,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYnB,IAAWL,EAASe,WAJpC,iCAUA,wBACEO,KAAK,SACLC,QAAS,kBAAMjB,EAAUN,EAASiB,SAClCI,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYnB,IAAWL,EAASiB,SAJpC,4BAUA,wBACEK,KAAK,SACLC,QAAS,kBAAMf,GAAeD,IAC9Bc,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAajB,IAJjB,sBAUEF,GAAUE,IACV,wBACEe,KAAK,SACLC,QAzCI,WACZjB,EAAUN,EAASI,SACnBI,GAAc,IAwCNa,UAAU,4BAHZ,sBAUJ,6BACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5efec8bc.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Good = string;\n\nenum SortType {\n  Alphabet = 'string',\n  Length = 'number',\n  Default = '',\n}\n\ninterface SortParams {\n  sortBy: SortType;\n  isReversed: boolean;\n}\n\nfunction getPreparedGood(\n  goods: Good[],\n  {\n    sortBy,\n    isReversed,\n  }: SortParams,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((goodA, goodB) => {\n      if (sortBy === SortType.Alphabet) {\n        return goodA.localeCompare(goodB);\n      }\n\n      if (sortBy === SortType.Length) {\n        return goodA.length - goodB.length;\n      }\n\n      return 0;\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.Default);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGood(\n    goodsFromServer,\n    {\n      sortBy,\n      isReversed,\n    },\n  );\n\n  const reset = () => {\n    setSortBy(SortType.Default);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortType.Alphabet)}\n          className={cn('button', 'is-info', {\n            'is-light': sortBy !== SortType.Alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortType.Length)}\n          className={cn('button', 'is-success', {\n            'is-light': sortBy !== SortType.Length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={reset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}